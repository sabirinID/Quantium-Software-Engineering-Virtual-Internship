Task 1: Set Up Your Local Development Environment

# Task Overview
What you'll learn
	Meet your clients Soul Foods who have seen a decline in sales on their top performing candy product
	How a software engineer at Quantium supports clients to understand the impact of their decisions on profitability

What you'll do
	Meet your supervisor Priscilla, a software engineer at Quantium in the financial services business area
	Set up your local development environment

# Here is the background information on your task
With little more than a few requirements and a messy data set to reference, it’s time to take a swing at this project. While Quantium has a few core tech stacks they work with on a regular basis, a small interactive visualisation like this one is perfectly suited to the Dash framework. Dash is a Python framework for developing visual tools to interrogate data. It’s easy to use, quick to develop with, and results in a pretty finished product. Before you can get to work on the application itself, set up your local development environment for working with Dash. Your local development environment can be thought of as a workbench with all the tools necessary to progress on a project. Invest an adequate amount of time setting up a good workbench and development on any project will be made far easier.

# Here is your task
	1. To begin, get your hands on the starter repo - fork and clone it to your machine: https://github.com/vagabond-systems/quantium-starter-repo. If this step is confusing, read the first two chapters of the Git book linked below.
 
	2. Open the project in your IDE of choice — feel free to use any Python IDE you’re comfortable with. If you don’t have a favourite Python IDE yet, look at Pycharm Community Edition. It’s a well-designed IDE by Jetbrains packed with features and plugins, powerful enough to work on the most complex projects, and entirely free.
 
	3. One of the best ways to manage dependencies in Python is with virtual environments. Each virtual environment contains a Python interpreter and a collection of project dependencies. They are entirely encapsulated in a single folder, and easy to work with once you get the hang of them. For this project, you will set up a Python 3.9 virtual environment. Review the resources linked below for more information.
 
	4. Next, add the dash and pandas packages as dependencies to your virtual environment. Instructions for this step can be found in the Resources section below.
 
	5. With your virtual environment active, run `pip install "dash[testing]"` (without backticks) to install all the necessary dash testing dependencies.
 
	6. Congratulations! You’ve completed the bulk of the work for this task and now have access to a fully-featured workbench. All that’s left is to submit your work. Commit your changes and push them to GitHub!
 
	7. You’re done! Submit a link to your repo below!

# Here are some resources to help you
 
	Download PyCharm
	https://www.jetbrains.com/pycharm/download/#section=linux

	Python Virtual Environments: A Primer
	https://realpython.com/python-virtual-environments-a-primer/

	Dash Installation
	https://dash.plotly.com/installation

# 